def findWaitingTime(process, n, bt, wt, quantum):
    rem_bt = [0] * n
    for i in range(n):
        rem_bt[i] = bt[i]

    t = 0
    while True:
        done = True
        for i in range(n):
            if rem_bt[i] > 0:
                done = False
                if rem_bt[i] > quantum:
                    t += quantum
                    rem_bt[i] -= quantum
                else:
                    t += rem_bt[i]
                    wt[i] = t - bt[i]
                    rem_bt[i] = 0
        if done:
            break


def findTurnaroundTime(process, n, bt, wt, tat):
    for i in range(n):
        tat[i] = bt[i] + wt[i]

def findAvgTime(process, n, bt, quantum):
    wt = [0] * n
    tat = [0] * n

    findWaitingTime(process, n, bt, wt, quantum)
    findTurnaroundTime(process, n, bt, wt, tat)

    print("Process\tBurst Time\tWaiting Time\tTurnaround Time")
    total_wt = 0
    total_tat = 0
    for i in range(n):
        total_wt += wt[i]
        total_tat += tat[i]
        print(f"{process[i]}\t\t{bt[i]}\t\t{wt[i]}\t\t{tat[i]}")

    print("\nAverage Waiting Time = %.5f" % (total_wt / n))
    print("Average Turnaround Time = %.5f" % (total_tat / n))

if __name__ == "__main__":
    proc = [1, 2, 3]
    n = 3
    burst_time = [24, 8, 12]
    quantum = 4
    findAvgTime(proc, n, burst_time, quantum)
